{
	"info": {
		"_postman_id": "34dfb520-2c11-4be0-83da-edd0edcc1e05",
		"name": "Spring Thymeleaf example - V1",
		"description": "An API developed using Thymeleaf and i18n to generate an PDF\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12072135"
	},
	"item": [
		{
			"name": "v1",
			"item": [
				{
					"name": "pdf",
					"item": [
						{
							"name": "Generate the Base64 PDF",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/pdf/encoded/:id?name=<string>&lang=en",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"pdf",
										"encoded",
										":id"
									],
									"query": [
										{
											"key": "name",
											"value": "<string>",
											"description": "(Required) An parameter passed for code generation\n"
										},
										{
											"key": "lang",
											"value": "en",
											"description": "A parameter used for internalization (i18)\n"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "book_template",
											"description": "(Required) ID to find the template\n"
										}
									]
								}
							},
							"response": [
								{
									"name": "Return a base64 pdf\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/pdf/encoded/:id?name=<string>&lang=en",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"pdf",
												"encoded",
												":id"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "lang",
													"value": "en"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "book_template",
													"description": "(Required) ID to find the template\n"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "<string>",
											"description": "Response date (now)"
										},
										{
											"key": "Keep-Alive",
											"value": "<string>",
											"description": "Timeout and a limit for requests on a connection"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"content\": \"<string>\"\n}"
								},
								{
									"name": "Errors throwed when validating the request\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json+problem"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/pdf/encoded/:id?name=<string>&lang=en",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"pdf",
												"encoded",
												":id"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "lang",
													"value": "en"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "book_template",
													"description": "(Required) ID to find the template\n"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json+problem"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Errors throwed when validating the request\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json+problem"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/pdf/encoded/:id?name=<string>&lang=en",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"pdf",
												"encoded",
												":id"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "lang",
													"value": "en"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "book_template",
													"description": "(Required) ID to find the template\n"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json+problem"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Generate the Binary PDF",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/pdf"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/pdf/preview/:id?name=<string>&lang=en",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"pdf",
										"preview",
										":id"
									],
									"query": [
										{
											"key": "name",
											"value": "<string>",
											"description": "(Required) An parameter passed for code generation\n"
										},
										{
											"key": "lang",
											"value": "en",
											"description": "A parameter used for internalization (i18)\n"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "book_template",
											"description": "(Required) ID to find the template\n"
										}
									]
								}
							},
							"response": [
								{
									"name": "Return a binary pdf\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/pdf"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/pdf/preview/:id?name=<string>&lang=en",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"pdf",
												"preview",
												":id"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "lang",
													"value": "en"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "book_template",
													"description": "(Required) ID to find the template\n"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Date",
											"value": "<string>",
											"description": "Response date (now)"
										},
										{
											"key": "Keep-Alive",
											"value": "<string>",
											"description": "Timeout and a limit for requests on a connection"
										},
										{
											"key": "Content-Type",
											"value": "application/pdf"
										}
									],
									"cookie": [],
									"body": "<binary>"
								},
								{
									"name": "Errors throwed when validating the request\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json+problem"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/pdf/preview/:id?name=<string>&lang=en",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"pdf",
												"preview",
												":id"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "lang",
													"value": "en"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "book_template",
													"description": "(Required) ID to find the template\n"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json+problem"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Errors throwed when validating the request\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json+problem"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/pdf/preview/:id?name=<string>&lang=en",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"pdf",
												"preview",
												":id"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "lang",
													"value": "en"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "book_template",
													"description": "(Required) ID to find the template\n"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json+problem"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "books",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Find one book by id",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/books/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"books",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "non eu",
													"description": "(Required) A simple id\n"
												}
											]
										}
									},
									"response": [
										{
											"name": "One book\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/books/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"books",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "non eu",
															"description": "(Required) A simple id\n"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "<string>",
													"description": "Response date (now)"
												},
												{
													"key": "Keep-Alive",
													"value": "<string>",
													"description": "Timeout and a limit for requests on a connection"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"author\": \"<string>\",\n  \"description\": \"<string>\",\n  \"createdAt\": \"<date>\",\n  \"publishedAt\": \"<date>\"\n}"
										},
										{
											"name": "Errors throwed when validating the request\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json+problem"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/books/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"books",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "non eu",
															"description": "(Required) A simple id\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json+problem"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Errors throwed when validating the request\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json+problem"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/books/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"books",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "non eu",
															"description": "(Required) A simple id\n"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json+problem"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete one book by id",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json+problem"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/books/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"books",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "non eu",
													"description": "(Required) A simple id\n"
												}
											]
										}
									},
									"response": [
										{
											"name": "Nothing if success\n",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v1/books/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"books",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "non eu",
															"description": "(Required) A simple id\n"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Date",
													"value": "<string>",
													"description": "Response date (now)"
												},
												{
													"key": "Keep-Alive",
													"value": "<string>",
													"description": "Timeout and a limit for requests on a connection"
												},
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Errors throwed when validating the request\n",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json+problem"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/books/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"books",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "non eu",
															"description": "(Required) A simple id\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json+problem"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Errors throwed when validating the request\n",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json+problem"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/books/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"books",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "non eu",
															"description": "(Required) A simple id\n"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json+problem"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "List all books",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/books",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"books"
									]
								}
							},
							"response": [
								{
									"name": "A List of books\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/books",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"books"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "<string>",
											"description": "Response date (now)"
										},
										{
											"key": "Keep-Alive",
											"value": "<string>",
											"description": "Timeout and a limit for requests on a connection"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"author\": \"<string>\",\n    \"description\": \"<string>\",\n    \"createdAt\": \"<date>\",\n    \"publishedAt\": \"<date>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"author\": \"<string>\",\n    \"description\": \"<string>\",\n    \"createdAt\": \"<date>\",\n    \"publishedAt\": \"<date>\"\n  }\n]"
								},
								{
									"name": "Errors throwed when validating the request\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json+problem"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/books",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"books"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json+problem"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Errors throwed when validating the request\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json+problem"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/books",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"books"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json+problem"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create a new book",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Other book\",\n  \"author\": \"Other author\",\n  \"description\": \"A description\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/books",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"books"
									]
								}
							},
							"response": [
								{
									"name": "All the book with id and creation date\n",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"author\": \"<string>\",\n  \"description\": \"<string>\",\n  \"id\": \"<string>\",\n  \"createdAt\": \"<date>\",\n  \"publishedAt\": \"<date>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/books",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"books"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "<string>",
											"description": "Response date (now)"
										},
										{
											"key": "Keep-Alive",
											"value": "<string>",
											"description": "Timeout and a limit for requests on a connection"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"author\": \"<string>\",\n  \"description\": \"<string>\",\n  \"createdAt\": \"<date>\",\n  \"publishedAt\": \"<date>\"\n}"
								},
								{
									"name": "Errors throwed when validating the request\n",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json+problem"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"author\": \"<string>\",\n  \"description\": \"<string>\",\n  \"id\": \"<string>\",\n  \"createdAt\": \"<date>\",\n  \"publishedAt\": \"<date>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/books",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"books"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json+problem"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Errors throwed when validating the request\n",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json+problem"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"author\": \"<string>\",\n  \"description\": \"<string>\",\n  \"id\": \"<string>\",\n  \"createdAt\": \"<date>\",\n  \"publishedAt\": \"<date>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/books",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"books"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json+problem"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update the book content",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json+problem"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"A9djnqw\",\n  \"name\": \"Harry Potter\",\n  \"author\": \"J.K Rowling\",\n  \"description\": \"Harry potter is a book of...\",\n  \"createdAt\": \"1997-06-26\",\n  \"publishedAt\": \"1999-10-01\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/books",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"books"
									]
								}
							},
							"response": [
								{
									"name": "Nothing if success\n",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"author\": \"<string>\",\n  \"description\": \"<string>\",\n  \"createdAt\": \"<date>\",\n  \"publishedAt\": \"<date>\",\n  \"id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/books",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"books"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Date",
											"value": "<string>",
											"description": "Response date (now)"
										},
										{
											"key": "Keep-Alive",
											"value": "<string>",
											"description": "Timeout and a limit for requests on a connection"
										},
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Errors throwed when validating the request\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/json+problem"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"author\": \"<string>\",\n  \"description\": \"<string>\",\n  \"createdAt\": \"<date>\",\n  \"publishedAt\": \"<date>\",\n  \"id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/books",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"books"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json+problem"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Errors throwed when validating the request\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/json+problem"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"author\": \"<string>\",\n  \"description\": \"<string>\",\n  \"createdAt\": \"<date>\",\n  \"publishedAt\": \"<date>\",\n  \"id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/books",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"books"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json+problem"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update the book content",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json+problem"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"s9duaiw\",\n  \"name\": \"Other book\",\n  \"author\": \"Other author\",\n  \"description\": \"A description\",\n  \"createdAt\": \"2024-01-01\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/books",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"books"
									]
								}
							},
							"response": [
								{
									"name": "Nothing if success\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"author\": \"<string>\",\n  \"description\": \"<string>\",\n  \"createdAt\": \"<date>\",\n  \"publishedAt\": \"<date>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/books",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"books"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Date",
											"value": "<string>",
											"description": "Response date (now)"
										},
										{
											"key": "Keep-Alive",
											"value": "<string>",
											"description": "Timeout and a limit for requests on a connection"
										},
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Errors throwed when validating the request\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json+problem"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"author\": \"<string>\",\n  \"description\": \"<string>\",\n  \"createdAt\": \"<date>\",\n  \"publishedAt\": \"<date>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/books",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"books"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json+problem"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Errors throwed when validating the request\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json+problem"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"author\": \"<string>\",\n  \"description\": \"<string>\",\n  \"createdAt\": \"<date>\",\n  \"publishedAt\": \"<date>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/books",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"books"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json+problem"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Receive the template",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/html"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/template/:id?name=non eu&lang=en",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"template",
								":id"
							],
							"query": [
								{
									"key": "name",
									"value": "non eu",
									"description": "(Required) An parameter passed for code generation\n"
								},
								{
									"key": "lang",
									"value": "en",
									"description": "A parameter used for internalization (i18)\n"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "book_template",
									"description": "(Required) ID to find the template\n"
								}
							]
						}
					},
					"response": [
						{
							"name": "Return an HTML with the processed template\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/html"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/template/:id?name=<string>&lang=en",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"template",
										":id"
									],
									"query": [
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "lang",
											"value": "en"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "book_template",
											"description": "(Required) ID to find the template\n"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Date",
									"value": "<string>",
									"description": "Response date (now)"
								},
								{
									"key": "Keep-Alive",
									"value": "<string>",
									"description": "Timeout and a limit for requests on a connection"
								},
								{
									"key": "Content-Type",
									"value": "text/html"
								}
							],
							"cookie": [],
							"body": "<string>"
						},
						{
							"name": "Errors throwed when validating the request\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json+problem"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/template/:id?name=<string>&lang=en",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"template",
										":id"
									],
									"query": [
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "lang",
											"value": "en"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "book_template",
											"description": "(Required) ID to find the template\n"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json+problem"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Errors throwed when validating the request\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json+problem"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/template/:id?name=<string>&lang=en",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"template",
										":id"
									],
									"query": [
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "lang",
											"value": "en"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "book_template",
											"description": "(Required) ID to find the template\n"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json+problem"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		}
	]
}